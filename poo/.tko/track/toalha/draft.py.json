{
    "patches": [
        {
            "label": "2025-09-16_19-37-32",
            "content": "@@ -1,29 +0,0 @@\n-print(%22minha toalha %C3%A9 azul%22)%0A\n",
            "lines": "0"
        },
        {
            "label": "2025-09-16_19-39-20",
            "content": "@@ -4,28 +4,8 @@\n nt(%22\n-vou come%C3%A7ar a criar \n minh\n@@ -12,11 +12,18 @@\n a toalha\n+ %C3%A9 azul\n %22)%0A\n",
            "lines": "1"
        },
        {
            "label": "2025-09-16_20-03-27",
            "content": "@@ -20,11 +20,23 @@\n a criar \n+minha toalha\n %22)%0A\n",
            "lines": "1"
        },
        {
            "label": "2025-09-16_20-03-42",
            "content": "@@ -1,188 +1,30 @@\n-%0Aclass Towel:%0A    def __init__(self):%0A        self.color = %22red%22%0A        self.size = %22p%22%0A        self.wetness = 0%0A%0Atowel = Towel()%0Aprint(towel.color)%0Aprint(towel.size)%0Aprint(towel.wetness)\n+print(%22vou come%C3%A7ar a criar %22)%0A\n",
            "lines": "1"
        },
        {
            "label": "2025-09-16_20-09-05",
            "content": "@@ -128,30 +128,8 @@\n l()%0A\n-towel.color = %22white%22%0A\n prin\n",
            "lines": "11"
        },
        {
            "label": "2025-09-16_20-10-10",
            "content": "@@ -124,35 +124,16 @@\n Towel()%0A\n-print(towel.color)%0A\n towel.co\n",
            "lines": "12"
        },
        {
            "label": "2025-09-16_20-10-47",
            "content": "@@ -32,59 +32,10 @@\n self\n-, color: str, size: str, wetness: int): #construtor\n+):\n %0A   \n@@ -52,21 +52,21 @@\n color = \n-color\n+%22red%22\n %0A       \n@@ -78,20 +78,19 @@\n .size = \n-size\n+%22p%22\n %0A       \n@@ -105,23 +105,17 @@\n tness = \n-wetness\n+0\n %0A%0Atowel \n@@ -126,34 +126,104 @@\n wel(\n-%22grenn%22, %22g%22, 10)%0Aprint(towel\n+)%0Aprint(towel.color)%0Atowel.color = %22white%22%0Aprint(towel.color)%0Aprint(towel.size)%0Aprint(towel.wetness\n )\n",
            "lines": "13"
        },
        {
            "label": "2025-09-16_20-14-24",
            "content": "@@ -51,16 +51,30 @@\n ize: str\n+, wetness: int\n ): #cons\n@@ -110,19 +110,8 @@\n olor\n- #atributos\n %0A   \n@@ -159,9 +159,15 @@\n s = \n-0\n+wetness\n %0A%0Ato\n@@ -186,163 +186,30 @@\n %22gre\n-e\n+n\n n%22, %22g%22\n-) #objetos%0Atowel2 = Towel(%22pink%22, %22p%22)%0A%0Aprint(towel.color) #red%0Atowel.color = %22white%22 %0Aprint(towel.color) #white%0Aprint(towel.size)%0Aprint(towel.wetness\n+, 10)%0Aprint(towel\n )\n",
            "lines": "9"
        },
        {
            "label": "2025-09-16_20-17-52",
            "content": "@@ -159,109 +159,8 @@\n  0%0A%0A\n-    def __str__ (self):%0A        return f%22color:%7Bself.color%7D, tam: %7Bself.size%7D, umi: %7Bself.wetness%7D%22%0A%0A\n towe\n@@ -188,20 +188,8 @@\n %22) #\n-refrencia e \n obje\n@@ -312,16 +312,16 @@\n l.size)%0A\n+\n print(to\n@@ -336,17 +336,4 @@\n ess)\n-%0Aprint(towel)\n",
            "lines": "15"
        },
        {
            "label": "2025-09-16_20-23-00",
            "content": "@@ -159,406 +159,8 @@\n  0%0A%0A\n-    def dry(self, amount:int) -%3E None:%0A        self.wetness += amount%0A        if self.wetness %3E= self.getMaxWetness:%0A            print(%22toalha encharcada%22)%0A            self.wetness == self.getMaxWetness%0A    %0A    def getMaxWetness(self) -%3E int:%0A        if self.size == %22p%22:%0A            return 10%0A        if self.size == %22m%22:%0A            return 20%0A        if self.size == %22g%22:%0A            return 30%0A%0A\n     \n@@ -262,14 +262,11 @@\n %0A%0Ato\n-alha_g\n+wel\n  = T\n@@ -307,22 +307,20 @@\n jetos%0Ato\n-alha_p\n+wel2\n  = Towel\n@@ -334,36 +334,35 @@\n , %22p%22)%0A%0Aprint(to\n-alha\n+wel\n .color) #red%0Atoa\n@@ -360,20 +360,19 @@\n  #red%0Ato\n-alha\n+wel\n .color =\n@@ -389,20 +389,19 @@\n print(to\n-alha\n+wel\n .color) \n@@ -415,20 +415,19 @@\n print(to\n-alha\n+wel\n .size)%0Ap\n@@ -437,113 +437,29 @@\n t(to\n-alha.wetness)%0Aprint(toalha)%0Atoalha_p.dry(10)%0Aprint(toalha_p.wetness)%0Atoalha_p.dry(10)%0Aprint(toalha_p.wetness\n+wel.wetness)%0Aprint(towel\n )\n",
            "lines": "19"
        },
        {
            "label": "2025-09-22_19-02-46",
            "content": "@@ -737,16 +737,146 @@\n , %22p%22)%0A%0A\n+print(toalha.color) #red%0Atoalha.color = %22white%22 %0Aprint(toalha.color) #white%0Aprint(toalha.size)%0Aprint(toalha.wetness)%0Aprint(toalha)\n %0Atoalha_\n",
            "lines": "37"
        },
        {
            "label": "2025-09-22_19-03-05",
            "content": "@@ -270,18 +270,16 @@\n xWetness\n-()\n :%0A      \n@@ -337,16 +337,17 @@\n etness =\n+=\n  self.ge\n@@ -361,10 +361,8 @@\n ness\n-()\n %0A   \n@@ -555,25 +555,8 @@\n n 30\n-%0A        return 0\n %0A%0A  \n",
            "lines": "32"
        },
        {
            "label": "2025-09-22_19-04-22",
            "content": "@@ -775,9 +775,10 @@\n dry(\n-5\n+10\n )%0Apr\n",
            "lines": "33"
        },
        {
            "label": "2025-09-22_19-04-45",
            "content": "@@ -575,139 +575,8 @@\n rn 0\n-%0A    %0A    def isDry(self) -%3E bool:%0A        return self.wetness == 0%0A    %0A    def wringOut (self) -%3E None :%0A        self.wetness = 0\n %0A%0A  \n@@ -672,21 +672,16 @@\n etness%7D%22\n-%0A    \n %0A%0Atoalha\n@@ -815,16 +815,16 @@\n dry(10)%0A\n+\n print(to\n@@ -842,186 +842,4 @@\n ess)\n-%0A%0Adef main():%0A    toalha = Towel(%22%22, %22%22)%0A    while True:%0A        line: str = input()%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A        if args%5B0%5D == %22end%22:%0A            break  %0Amain()\n",
            "lines": "33"
        },
        {
            "label": "2025-09-22_19-48-16",
            "content": "@@ -893,16 +893,99 @@\n , %22p%22)%0A%0A\n+%0Atoalha_p.dry(5)%0Aprint(toalha_p.wetness)%0Atoalha_p.dry(10)%0Aprint(toalha_p.wetness)%0A%0A\n def main\n",
            "lines": "49"
        },
        {
            "label": "2025-09-22_19-48-52",
            "content": "@@ -1069,141 +1069,8 @@\n eak \n-%0A        if args%5B0%5D == %22new%22:%0A            color = args%5B1%5D%0A            size = args %5B2%5D%0A            toalha = Towel(color, size)%0A       \n  %0Ama\n",
            "lines": "43"
        },
        {
            "label": "2025-09-22_19-53-15",
            "content": "@@ -1203,57 +1203,8 @@\n     \n-elif args%5B0%5D == %22show%22:%0A            print(toalha)\n %0Amai\n",
            "lines": "48"
        },
        {
            "label": "2025-09-22_19-55-18",
            "content": "@@ -1253,161 +1253,8 @@\n ha)%0A\n-        elif args%5B0%5D == %22dry%22:%0A            amount: int = int(args%5B1%5D)%0A            toalha.dry(amount)%0A        else:%0A            print(%22Comando invalido%22)%0A\n main\n",
            "lines": "49"
        },
        {
            "label": "2025-09-29_21-26-32",
            "content": "\nclass Towel:\n    def __init__(self, color: str, size: str): #construtor\n        self.color = color #atributos\n        self.size = size\n        self.wetness = 0\n\n    def dry(self, amount:int) -> None:\n        self.wetness += amount\n        if self.wetness >= self.getMaxWetness():\n            print(\"toalha encharcada\")\n            self.wetness = self.getMaxWetness()\n    \n    def getMaxWetness(self) -> int:\n        if self.size == \"p\":\n            return 10\n        if self.size == \"m\":\n            return 20\n        if self.size == \"g\":\n            return 30\n        return 0\n    \n    def isDry(self) -> bool:\n        return self.wetness == 0\n    \n    def wringOut (self) -> None :\n        self.wetness = 0\n\n    def __str__ (self):\n        return f\"color:{self.color}, tam: {self.size}, umi: {self.wetness}\"\n    \n\ntoalha_g = Towel(\"green\", \"g\") #refrencia e objetos\ntoalha_p = Towel(\"pink\", \"p\")\n\ndef main():\n    toalha = Towel(\"\", \"\")\n    while True:\n        line: str = input()\n        args: list[str] = line.split(\" \")\n        if args[0] == \"end\":\n            break \n        if args[0] == \"new\":\n            color = args[1]\n            size = args [2]\n            toalha = Towel(color, size)\n        elif args[0] == \"show\":\n            print(toalha)\n        elif args[0] == \"dry\":\n            amount: int = int(args[1])\n            toalha.dry(amount)\n        else:\n            print(\"Comando invalido\")\nmain()",
            "lines": "54"
        }
    ]
}